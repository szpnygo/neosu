<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>动态规划 on NeoSuDoc</title><link>https://neosu.info/docs/leetcode/dynamic_programming.html</link><description>Recent content in 动态规划 on NeoSuDoc</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://neosu.info/">NeoSu&lt;/a></copyright><lastBuildDate>Fri, 07 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://neosu.info/docs/leetcode/dynamic_programming/index.xml" rel="self" type="application/rss+xml"/><item><title>53.最大子序和</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l53_maximum_subarray.html</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l53_maximum_subarray.html</guid><description>题目 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 示例1： 输入：nums = [-2,1,-3,4,-1,2,1,-5,4] 输出：6 解释：连续子数组 [4,-1,2,1] 的</description></item><item><title>70.爬楼梯</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l70_climbing_stairs.html</link><pubDate>Sat, 08 May 2021 16:53:41 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l70_climbing_stairs.html</guid><description>题目 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ 注意：给定 n 是一个正整数。 示例1： 输入：2</description></item><item><title>121.买卖股票的最佳时机</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l121_best_time_to_buy_and_sell_stock.html</link><pubDate>Sun, 09 May 2021 13:03:48 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l121_best_time_to_buy_and_sell_stock.html</guid><description>题目 给定一个数组 $prices$ ，它的第 $i$ 个元素 $prices[i]$ 表示一支给定股票第 $i$ 天的价格。 你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法</description></item><item><title>300.最长递增子序列</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l300_longest_increasing_subsequence.html</link><pubDate>Mon, 10 May 2021 08:35:34 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l300_longest_increasing_subsequence.html</guid><description>题目 给你一个整数数组$nums$ ，找到其中最长严格递增子序列的长度。 子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。</description></item><item><title>673.最长递增子序列的个数</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l673_number_of_longest_increasing+subsequence.html</link><pubDate>Mon, 10 May 2021 09:46:11 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l673_number_of_longest_increasing+subsequence.html</guid><description>题目 给定一个未排序的整数数组，找到最长递增子序列的个数。 示例1： 输入: [1,3,5,4,7] 输出: 2 解释: 有两个最长递增子序列，分别是 [1, 3, 4, 7] 和[1, 3, 5, 7]。 示例2： 输</description></item></channel></rss>