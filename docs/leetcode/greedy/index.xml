<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>贪心算法 on NeoSuDoc</title><link>https://neosu.info/docs/leetcode/greedy.html</link><description>Recent content in 贪心算法 on NeoSuDoc</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://neosu.info/">NeoSu&lt;/a></copyright><lastBuildDate>Fri, 14 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://neosu.info/docs/leetcode/greedy/index.xml" rel="self" type="application/rss+xml"/><item><title>45.跳跃游戏 II</title><link>https://neosu.info/docs/leetcode/greedy/l45_jump_game_2.html</link><pubDate>Fri, 14 May 2021 19:13:57 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l45_jump_game_2.html</guid><description>题目 给定一个非负整数数组，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 你的目标是使用最少的跳跃次数到达数组的最后一个</description></item><item><title>55.跳跃游戏</title><link>https://neosu.info/docs/leetcode/greedy/l55_jump_game.html</link><pubDate>Fri, 14 May 2021 19:13:57 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l55_jump_game.html</guid><description>题目 给定一个非负整数数组$nums$ ，你最初位于数组的 第一个下标 。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 判断你是否能够到达最后一个下标。 示</description></item><item><title>122.买卖股票的最佳时机 II</title><link>https://neosu.info/docs/leetcode/greedy/l122_best_time_to_buy_and_sell_stock_2.html</link><pubDate>Tue, 18 May 2021 16:54:48 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l122_best_time_to_buy_and_sell_stock_2.html</guid><description>题目 给定一个数组 prices ，其中 prices[i] 是一支给定股票第 i 天的价格。 设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。 注意：</description></item><item><title>455.分发饼干</title><link>https://neosu.info/docs/leetcode/greedy/l455_assign_cookies.html</link><pubDate>Wed, 19 May 2021 14:51:33 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l455_assign_cookies.html</guid><description>题目 假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。 对每个孩子 i，都有一个胃口值 g[i]，这是能让孩子们满足胃口</description></item><item><title>714.买卖股票的最佳时机含手续费</title><link>https://neosu.info/docs/leetcode/greedy/l714_best_time_to_buy_and_sell_stock_with_transaction_fee.html</link><pubDate>Thu, 20 May 2021 16:37:55 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l714_best_time_to_buy_and_sell_stock_with_transaction_fee.html</guid><description>题目 给定一个整数数组 prices，其中第 i 个元素代表了第 i 天的股票价格 ；非负整数 fee 代表了交易股票的手续费用。 你可以无限次地完成交易，但是你每笔交易都需</description></item><item><title>860.柠檬水找零</title><link>https://neosu.info/docs/leetcode/greedy/l860_lemonade_change.html</link><pubDate>Tue, 18 May 2021 17:19:54 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l860_lemonade_change.html</guid><description>题目 在柠檬水摊上，每一杯柠檬水的售价为 5 美元。 顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。 每位顾客只买一杯柠檬水，然后向你付 5 美元、10</description></item><item><title>881.救生艇</title><link>https://neosu.info/docs/leetcode/greedy/l881_boats_to_save_people.html</link><pubDate>Fri, 21 May 2021 15:06:47 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l881_boats_to_save_people.html</guid><description>题目 第 $i$ 个人的体重为 $people[i]$，每艘船可以承载的最大重量为 $limit$。 每艘船最多可同时载两人，但条件是这些人的重量之和最多为 $limi</description></item><item><title>1217.玩筹码</title><link>https://neosu.info/docs/leetcode/greedy/l1217_minimum_cost_to_move_chips_to_the_same_position.html</link><pubDate>Thu, 20 May 2021 15:14:06 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l1217_minimum_cost_to_move_chips_to_the_same_position.html</guid><description>题目 数轴上放置了一些筹码，每个筹码的位置存在数组 chips 当中。 你可以对 任何筹码 执行下面两种操作之一（不限操作次数，0 次也可以）： 将第 i 个筹码向左或者右移动 2</description></item><item><title>1518.换酒问题</title><link>https://neosu.info/docs/leetcode/greedy/l1518_water_bottles.html</link><pubDate>Thu, 20 May 2021 15:42:43 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l1518_water_bottles.html</guid><description>题目 小区便利店正在促销，用 numExchange 个空酒瓶可以兑换一瓶新酒。你购入了 numBottles 瓶酒。 如果喝掉了酒瓶中的酒，那么酒瓶就会变成空的。 请你计算 最多 能喝到多少瓶酒。 示例1：</description></item></channel></rss>