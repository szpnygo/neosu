<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NeoSu on NeoSuDoc</title><link>https://neosu.info/authors/neosu.html</link><description>Recent content in NeoSu on NeoSuDoc</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://neosu.info/">NeoSu&lt;/a></copyright><lastBuildDate>Sun, 09 May 2021 13:03:48 +0800</lastBuildDate><atom:link href="https://neosu.info/authors/neosu/index.xml" rel="self" type="application/rss+xml"/><item><title>53.最大子序和</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l53_maximum_subarray.html</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l53_maximum_subarray.html</guid><description>题目 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 示例1： 输入：nums = [-2,1,-3,4,-1,2,1,-5,4] 输出：6 解释：连续子数组 [4,-1,2,1] 的</description></item><item><title>70.爬楼梯</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l70_climbing_stairs.html</link><pubDate>Sat, 08 May 2021 16:53:41 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l70_climbing_stairs.html</guid><description>题目 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ 注意：给定 n 是一个正整数。 示例1： 输入：2</description></item><item><title>121.买卖股票的最佳时机</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l121_best_time_to_buy_and_sell_stock.html</link><pubDate>Sun, 09 May 2021 13:03:48 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l121_best_time_to_buy_and_sell_stock.html</guid><description>题目 给定一个数组 $prices$ ，它的第 $i$ 个元素 $prices[i]$ 表示一支给定股票第 $i$ 天的价格。 你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法</description></item><item><title>Redis Bitmap位图介绍与操作</title><link>https://neosu.info/posts/redis-bitmap.html</link><pubDate>Sat, 08 May 2021 09:50:30 +0800</pubDate><guid>https://neosu.info/posts/redis-bitmap.html</guid><description>位图介绍 Redis的位图(bitmap)是由多个二进制位组成的数组，数组中的每个二进制位都有与之对应的偏移量，用户通过这些偏移量可以对位图中指定一个或</description></item><item><title>LeetCode学习</title><link>https://neosu.info/docs/leetcode.html</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://neosu.info/docs/leetcode.html</guid><description>力扣（LeetCode）是领扣网络旗下专注于程序员技术成长和企业技术人才服务的品牌。源自美国硅谷，力扣为全球程序员提供了专业的IT技术职业化提升平台，</description></item><item><title>动态规划</title><link>https://neosu.info/docs/leetcode/dynamic_programming.html</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming.html</guid><description>动态规划（Dynamic Programming，DP）是运筹学的一个分支，是求解决策过程最优化的过程。20世纪50年代初，美国数学家贝尔曼（R.Bel</description></item><item><title>Golang学习</title><link>https://neosu.info/docs/golang-doc.html</link><pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate><guid>https://neosu.info/docs/golang-doc.html</guid><description>Go（又称Golang）是Google开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。 罗伯特·格瑞史莫（Robert Griesem</description></item><item><title>Golang面试题</title><link>https://neosu.info/docs/golang-doc/nested-chapter.html</link><pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate><guid>https://neosu.info/docs/golang-doc/nested-chapter.html</guid><description>&lt;h2 id="golang面试题总结">Golang面试题总结&lt;/h2></description></item></channel></rss>