<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on NeoSuDoc</title><link>https://neosu.info/categories/%E7%AE%97%E6%B3%95.html</link><description>Recent content in 算法 on NeoSuDoc</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy; 2021 &lt;a href="https://neosu.info/">NeoSu&lt;/a></copyright><lastBuildDate>Wed, 19 May 2021 14:51:33 +0800</lastBuildDate><atom:link href="https://neosu.info/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>2.两数相加</title><link>https://neosu.info/docs/leetcode/linked_list/l2_add_two_number.html</link><pubDate>Fri, 14 May 2021 16:05:46 +0800</pubDate><guid>https://neosu.info/docs/leetcode/linked_list/l2_add_two_number.html</guid><description>题目 给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。 请你将两个数相加，并以相同形式返回一个</description></item><item><title>45.跳跃游戏 II</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l45_jump_game_2.html</link><pubDate>Fri, 14 May 2021 19:13:57 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l45_jump_game_2.html</guid><description>题目 给定一个非负整数数组，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 你的目标是使用最少的跳跃次数到达数组的最后一个</description></item><item><title>45.跳跃游戏 II</title><link>https://neosu.info/docs/leetcode/greedy/l45_jump_game_2.html</link><pubDate>Fri, 14 May 2021 19:13:57 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l45_jump_game_2.html</guid><description>题目 给定一个非负整数数组，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 你的目标是使用最少的跳跃次数到达数组的最后一个</description></item><item><title>3.重复字符的最长子串</title><link>https://neosu.info/docs/leetcode/string/l3_longest_substring_without_repeating_characters.html</link><pubDate>Wed, 19 May 2021 13:43:21 +0800</pubDate><guid>https://neosu.info/docs/leetcode/string/l3_longest_substring_without_repeating_characters.html</guid><description>题目 给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。 示例1： 输入: s = &amp;quot;abcabcbb&amp;quot; 输出: 3 解释: 因为无重复字符的最长子串是 &amp;quot;abc&amp;quo</description></item><item><title>1.两数之和</title><link>https://neosu.info/docs/leetcode/array/l1_two_sum.html</link><pubDate>Fri, 14 May 2021 13:43:21 +0800</pubDate><guid>https://neosu.info/docs/leetcode/array/l1_two_sum.html</guid><description>题目 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。 你可以假设每种输入只会对应一个答案</description></item><item><title>53.最大子序和</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l53_maximum_subarray.html</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l53_maximum_subarray.html</guid><description>题目 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 示例1： 输入：nums = [-2,1,-3,4,-1,2,1,-5,4] 输出：6 解释：连续子数组 [4,-1,2,1] 的</description></item><item><title>55.跳跃游戏</title><link>https://neosu.info/docs/leetcode/greedy/l55_jump_game.html</link><pubDate>Fri, 14 May 2021 19:13:57 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l55_jump_game.html</guid><description>题目 给定一个非负整数数组$nums$ ，你最初位于数组的 第一个下标 。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 判断你是否能够到达最后一个下标。 示</description></item><item><title>70.爬楼梯</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l70_climbing_stairs.html</link><pubDate>Sat, 08 May 2021 16:53:41 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l70_climbing_stairs.html</guid><description>题目 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ 注意：给定 n 是一个正整数。 示例1： 输入：2</description></item><item><title>121.买卖股票的最佳时机</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l121_best_time_to_buy_and_sell_stock.html</link><pubDate>Sun, 09 May 2021 13:03:48 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l121_best_time_to_buy_and_sell_stock.html</guid><description>题目 给定一个数组 $prices$ ，它的第 $i$ 个元素 $prices[i]$ 表示一支给定股票第 $i$ 天的价格。 你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法</description></item><item><title>122.买卖股票的最佳时机 II</title><link>https://neosu.info/docs/leetcode/greedy/l122_best_time_to_buy_and_sell_stock_2.html</link><pubDate>Tue, 18 May 2021 16:54:48 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l122_best_time_to_buy_and_sell_stock_2.html</guid><description>题目 给定一个数组 prices ，其中 prices[i] 是一支给定股票第 i 天的价格。 设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。 注意：</description></item><item><title>152.乘积最大子数组</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l152_maximum_product_subarray.html</link><pubDate>Wed, 12 May 2021 10:04:25 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l152_maximum_product_subarray.html</guid><description>题目 给你一个整数数组$nums$ ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。 示例1： 输入: [2,3,-2,4] 输出:</description></item><item><title>198.打家劫舍</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l198_house_robber.html</link><pubDate>Wed, 12 May 2021 11:42:37 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l198_house_robber.html</guid><description>题目 你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋</description></item><item><title>300.最长递增子序列</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l300_longest_increasing_subsequence.html</link><pubDate>Mon, 10 May 2021 08:35:34 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l300_longest_increasing_subsequence.html</guid><description>题目 给你一个整数数组$nums$ ，找到其中最长严格递增子序列的长度。 子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。</description></item><item><title>322.零钱兑换</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l322_coin_change.html</link><pubDate>Thu, 13 May 2021 17:21:50 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l322_coin_change.html</guid><description>题目 给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总金额，返回 -1</description></item><item><title>455.分发饼干</title><link>https://neosu.info/docs/leetcode/greedy/l455_assign_cookies.html</link><pubDate>Wed, 19 May 2021 14:51:33 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l455_assign_cookies.html</guid><description>题目 假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。 对每个孩子 i，都有一个胃口值 g[i]，这是能让孩子们满足胃口</description></item><item><title>673.最长递增子序列的个数</title><link>https://neosu.info/docs/leetcode/dynamic_programming/l673_number_of_longest_increasing+subsequence.html</link><pubDate>Mon, 10 May 2021 09:46:11 +0800</pubDate><guid>https://neosu.info/docs/leetcode/dynamic_programming/l673_number_of_longest_increasing+subsequence.html</guid><description>题目 给定一个未排序的整数数组，找到最长递增子序列的个数。 示例1： 输入: [1,3,5,4,7] 输出: 2 解释: 有两个最长递增子序列，分别是 [1, 3, 4, 7] 和[1, 3, 5, 7]。 示例2： 输</description></item><item><title>860.柠檬水找零</title><link>https://neosu.info/docs/leetcode/greedy/l860_lemonade_change.html</link><pubDate>Tue, 18 May 2021 17:19:54 +0800</pubDate><guid>https://neosu.info/docs/leetcode/greedy/l860_lemonade_change.html</guid><description>题目 在柠檬水摊上，每一杯柠檬水的售价为 5 美元。 顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。 每位顾客只买一杯柠檬水，然后向你付 5 美元、10</description></item></channel></rss>